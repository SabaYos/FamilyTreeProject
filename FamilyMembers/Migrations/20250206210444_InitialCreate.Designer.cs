// <auto-generated />
using System;
using FamilyTreeAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyTreeAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250206210444_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FamilyMembers.Models.FamilyMember", b =>
                {
                    b.Property<int>("FamilyMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyMemberId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyTreeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("FamilyMemberId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("FamilyMembers.Models.FamilyTree", b =>
                {
                    b.Property<int>("FamilyTreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyTreeId"));

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyTreeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyTreeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FamilyTreeId");

                    b.HasIndex("UserID");

                    b.ToTable("FamilyTree");
                });

            modelBuilder.Entity("FamilyMembers.Models.Relationship", b =>
                {
                    b.Property<int>("RelationshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelationshipId"));

                    b.Property<int>("FamilyTreeId")
                        .HasColumnType("int");

                    b.Property<int>("FromFamilyMemberId")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("int");

                    b.Property<int>("ToFamilyMemberId")
                        .HasColumnType("int");

                    b.HasKey("RelationshipId");

                    b.HasIndex("FamilyTreeId");

                    b.HasIndex("FromFamilyMemberId");

                    b.HasIndex("ToFamilyMemberId");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("LoginAPI.Models.Registration", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("FamilyMembers.Models.FamilyTree", b =>
                {
                    b.HasOne("LoginAPI.Models.Registration", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyMembers.Models.Relationship", b =>
                {
                    b.HasOne("FamilyMembers.Models.FamilyTree", "FamilyTree")
                        .WithMany()
                        .HasForeignKey("FamilyTreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyMembers.Models.FamilyMember", "FromFamilyMember")
                        .WithMany()
                        .HasForeignKey("FromFamilyMemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FamilyMembers.Models.FamilyMember", "ToFamilyMember")
                        .WithMany()
                        .HasForeignKey("ToFamilyMemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FamilyTree");

                    b.Navigation("FromFamilyMember");

                    b.Navigation("ToFamilyMember");
                });
#pragma warning restore 612, 618
        }
    }
}
